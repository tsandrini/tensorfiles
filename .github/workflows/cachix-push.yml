# --- Push packages & devshells to the cachix binary cache service
name: cachix push

on:
  workflow_dispatch: # allows manual triggering from the Actions UI
  push:
    branches:
      - main

jobs:
  cachix-push:
    runs-on: "ubuntu-latest"
    env:
      ALLOW_UNFREE: true
    steps:
      - name: "Checking out repository..."
        uses: actions/checkout@v4

      - name: "Installing and configuring the nix package manager..."
        uses: DeterminateSystems/nix-installer-action@main

      - name: "Setting up magic-nix-cache..."
        uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          extra-conf: |
            experimental-features = nix-command flakes impure-derivations
            accept-flake-config = true
            allow-import-from-derivation = true

      - name: "Settings up cachix binary cache..."
        uses: cachix/cachix-action@v15
        with:
          name: mycache
          # If you chose signing key for write access
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          # If you chose API tokens for write access OR if you have a private cache
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      # NOTE Install any necessary packages here
      - name: "Setting up packages..."
        run: |
          nix profile install nixpkgs#nix-fast-build # parallel nix builder

      - name: "Building project packages..."
        run: nix-fast-build --skip-cached --no-nom --flake ".#packages"

      - name: "Building project devShells..."
        run: nix-fast-build --skip-cached --no-nom --flake ".#devShells"
